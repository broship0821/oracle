SELECT * FROM MEMBER;

UPDATE MEMBER SET AGE=25 WHERE ID='dragon';
UPDATE MEMBER SET AGE=35 WHERE ID='newlec';
INSERT INTO MEMBER(ID, PWD, NAME, AGE) VALUES('kang', 111, '강호동', 35);
DELETE FROM MEMBER WHERE PWD=333;
COMMIT;

SELECT * FROM NOTICE;

--INNER JOIN, INNER 생략 가능
SELECT * FROM MEMBER INNER JOIN NOTICE ON MEMBER.ID = NOTICE.WRITER_ID;
SELECT * FROM MEMBER JOIN NOTICE ON MEMBER.ID = NOTICE.WRITER_ID;

--OUTER JOIN
SELECT * FROM NOTICE N LEFT OUTER JOIN MEMBER M ON N.WRITER_ID = M.ID;
SELECT * FROM NOTICE N RIGHT OUTER JOIN MEMBER M ON N.WRITER_ID = M.ID;
SELECT * FROM NOTICE N FULL OUTER JOIN MEMBER M ON N.WRITER_ID = M.ID;
--게시물을 작성하지 않은 회원도 출력해야 하기 때문에 OUTER JOIN을 많이 씀
SELECT M.ID, M.NAME, COUNT(N.ID)
FROM MEMBER M LEFT OUTER JOIN NOTICE N ON M.ID = N.WRITER_ID
GROUP BY M.ID, M.NAME;

--SELF JOIN: 확장하고자 하는 테이블이 자기 자신
SELECT M.*, B.NAME BOSS_NAME
FROM MEMBER M LEFT OUTER JOIN MEMBER B ON B.ID = M.BOSS_ID;

--ORACLE OLD JOIN
SELECT N.*, M.NAME WRITER_NAME
FROM NOTICE N LEFT JOIN MEMBER M ON M.ID = N.WRITER_ID;

SELECT N.*, M.NAME WRITER_NAME
FROM NOTICE N, MEMBER M WHERE M.ID(+) = N.WRITER_ID;

--CROSS JOIN
SELECT N.*, M.NAME WRITER_NAME
FROM NOTICE N CROSS JOIN MEMBER M;

--UNION 중복제거
SELECT ID, NAME FROM MEMBER
UNION
SELECT WRITER_ID, TITLE FROM NOTICE;
UPDATE NOTICE SET TITLE = '뉴렉' WHERE ID=8;
--UNION ALL 중복 포함
SELECT ID, NAME FROM MEMBER
UNION ALL
SELECT WRITER_ID, TITLE FROM NOTICE;
--MINUS 공통분모 빼고 출력
SELECT ID, NAME FROM MEMBER
MINUS
SELECT WRITER_ID, TITLE FROM NOTICE;
--INTERSECT
SELECT ID, NAME FROM MEMBER
INTERSECT
SELECT WRITER_ID, TITLE FROM NOTICE;